<?phpnamespace model;include_once '../../config/Dbconnect.php';class AuthModel extends \Dbconnect{    public  function registerUser($username,$password,$address,$phone,$Name)    {        $query = "INSERT INTO users(userName, password, Address, phone,Name) VALUES (?,?,?,?,?)";        $stmt = $this->Connect()->prepare($query);        $stmt->bind_param('sssss',$username,$password,$address,$phone,$Name);        if ($stmt->execute()){            echo json_encode(['success' => true, 'message' => 'Successfully Registered']);        }else{            echo json_encode(['success' => false, 'error' => $stmt->error]);        }    }    public function Login($username, $password)    {        // Prepare the query to select the user        $query = "SELECT * FROM users WHERE userName = ?";        $stmt = $this->Connect()->prepare($query);        $stmt->bind_param('s', $username);        $stmt->execute();        // Get the result of the query        $result = $stmt->get_result();        // Check if the user exists        if ($result->num_rows > 0) {            // Fetch the user data            $user = $result->fetch_assoc();            // Verify the provided password against the stored hashed password            if (password_verify($password, $user['password'])) {                // Password is correct, start the session and set session variables                session_start();                $_SESSION['username'] = $user['userName'];                $_SESSION['userId'] = $user['userId'];                $_SESSION['Name'] = $user['Name'];                $_SESSION['Address'] = $user['Address'];                $_SESSION['phone'] = $user['phone'];                // Return success response                echo json_encode(['success' => true, 'message' => 'Successfully Logged']);            } else {                // Password is incorrect                echo json_encode(['success' => false, 'message' => 'Invalid Username or Password']);            }        } else {            // No user found with the provided username            echo json_encode(['success' => false, 'message' => 'Your Account is Not Registered']);        }        // Close the statement and connection        $stmt->close();    }    public function getUserName($userName)    {        $query = "SELECT userName FROM users WHERE userName = ?";        $stmt = $this->Connect()->prepare($query);        if ($stmt === false) {            die('Prepare failed: ' . $this->Connect()->error);        }        $stmt->bind_param('s', $userName);        $stmt->execute();        $result = $stmt->get_result();        $row = $result->fetch_assoc();        return $row ? $row['userName'] : null;  // Return null if no user is found    }}