<?phpnamespace model;include_once '../../config/Dbconnect.php';class productModel extends \Dbconnect{    public $ProductStatus = 'Active';   public function addProducts($productName,$price,$image,$category,$stack)   {        $query = "INSERT INTO product(ProductName, Price, image,category,Stack)VALUES (?,?,?,?,?)";        $stmt = $this->Connect()->prepare($query);        $stmt->bind_param('sissi',$productName,$price,$image,$category,$stack);        if ($stmt->execute()){            echo json_encode(['success' => true, 'message' => 'Successfully Added New Product']);        }else{            echo json_encode(['success' => false, 'error' => $stmt->error]);        }   }   public function displayProducts()   {      $result = $this->Connect()->query("SELECT * FROM product WHERE archiveStatus = 'Active'");      if ($result->num_rows > 0){          $dataRow =[];          while ($row = $result->fetch_assoc()){              $dataRow[] = $row;          }          return $dataRow;      }      return null;   }   public  function showProductBaseInCategory($categoryName)   {       $status = 'Active';       $query = "SELECT * FROM product WHERE archiveStatus = ? AND category = ?";       $stmt = $this->Connect()->prepare($query);       $stmt->bind_param('ss', $status, $categoryName);       $stmt->execute();       $result = $stmt->get_result();       if ($result->num_rows >0)       {          $dataRow = [];          while ($row = $result->fetch_assoc()){              $dataRow[] = $row;          }          return $dataRow;       }        return  null;   }   public function archiveProducts($productId)   {       $query = "UPDATE product SET archiveStatus = 'Deleted' WHERE product_Id = ?";       $stmt = $this->Connect()->prepare($query);       $stmt->bind_param('i',$productId);       if ($stmt->execute()){           echo json_encode(['success' => true, 'message' => 'product is successfully deleted']);       }else{           echo json_encode(['success' => false, 'message' => $stmt->error]);       }   }   public function updateProduct($productId)   {       $query = "SELECT * FROM product WHERE product_Id = ?";       $stmt = $this->Connect()->prepare($query);       $stmt->bind_param('i',$productId);       $stmt->execute();       $result = $stmt->get_result();       if ($result->num_rows > 0){           $dataRow = [];           while ($row = $result->fetch_assoc()){               $dataRow[] = $row;           }           return $dataRow;       }       return null;   }   public function saveProduct($productName,$price,$image,$id)   {         $query = "UPDATE product SET ProductName = ? ,Price = ? ,image = ? WHERE product_Id = ?";         $stmt = $this->Connect()->prepare($query);         $stmt->bind_param('sisi',$productName,$price,$image,$id);         if ($stmt->execute()){             echo json_encode(['success' => true, 'message' => 'product is successfully updated']);         }else{             echo json_encode(['success' => false, 'message' => $stmt->error]);         }   }   public function countProduct()   {       $result = $this->Connect()->query("SELECT COUNT(product_Id) AS count from product where archiveStatus = 'Active'");       $count = $result->fetch_assoc();       return $count['count'];   }   public function stacksChecker($productId,$quantity)   {       // check if the current stacks is < quantity input       $queryStack = "SELECT Stack FROM product WHERE product_Id = ?";       $stmt = $this->Connect()->prepare($queryStack);       $stmt->bind_param('i',$productId);       $stmt->execute();       $result = $stmt->get_result();       if ($result->num_rows > 0){           $stacks = $result->fetch_assoc();          $currentStack = $stacks['Stack'];          if ($currentStack < $quantity){             return true;          }       }       return  false;   }}