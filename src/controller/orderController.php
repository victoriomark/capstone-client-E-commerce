<?phpnamespace controller;use model\cartModel;use model\orderModel;session_start();include_once '../model/orderModel.php';include_once '../model/cartModel.php';class orderController{    public function takeOrders() {        $address = $_POST['address'];        $costumerName = $_POST['costumerName'];        $Phone = $_POST['Phone'];        $Email = $_POST['Email'];        $userId = $_SESSION['userId'];        $orderItems = json_decode($_POST['orderItems'], true); // Decode JSON to array        $model = new orderModel();        $clearCart = new cartModel();        if (empty($address)) {            echo json_encode(['success' => false, 'message' => 'Address is required']);            return;  // Stop further execution        }        // Loop through each item and insert it        foreach ($orderItems as $item) {            $result = $model->createOrders(                $item['productId'],                $item['productName'],                $item['itemTotal'],                $item['price'],                $costumerName,                $address,                $Email,                $Phone,                $item['quantity']            );            if (!$result['success']) {                // If an error occurs, return error message and stop execution                echo json_encode(['success' => false, 'error' => $result['error']]);                return;            }        }        // Clear cart after processing all items        $clearCart->deleteCartItem($userId);        // Return success response after all items are processed        echo json_encode(['success' => true, 'message' => 'Your Order Successfully Submit']);    }    public function displayOrders()    {        $rowData = new orderModel();        $data = $rowData->displayOrders();        $tr = '';        if ($data) {            foreach ($data as $row) {                $orderId = $row['OrderId'];                $customerName = $row['CostumerName']; // Corrected 'CostumerName' to 'CustomerName'                $productName = $row['ProductName'];                $unitPrice = $row['UnitPrice'];                $quantity = $row['quantity']; // Ensure consistent case for field names                $itemTotal = $row['OrderAmount'];                $orderStatus = $row['Status'];                // Build the table row for each order                $tr .= "<tr>";                $tr .= "<th>${orderId}</th>";                $tr .= "<td>${customerName}</td>";                $tr .= "<td>${productName}</td>";                $tr .= "<td>${unitPrice}</td>";                $tr .= "<td>${quantity}</td>";                $tr .= "<td>${itemTotal}</td>";                // Handle status badges                switch ($orderStatus) {                    case 'Pending':                        $tr .= "<td> <span class='badge bg-info'>${orderStatus}</span></td>";                        break;                    case 'Completed':                        $tr .= "<td> <span class='badge bg-success'>${orderStatus}</span></td>";                        break;                    case 'Cancelled':                        $tr .= "<td> <span class='badge bg-danger'>${orderStatus}</span></td>";                        break;                    default:                        $tr .= "<td>${orderStatus}</td>"; // Default in case of other statuses                        break;                }                $tr .=                    "<td>                      <div class='d-flex gap-2'>                          <select class='form-select' aria-label='Default select example'>                          <option selected>Update</option>                          <option value='1'>One</option>                          <option value='2'>Two</option>                          <option value='3'>Three</option>                        </select>                          <button class='btn btn-info badge'>View</button>                       </div>                                    </td>";                $tr .= "</tr>";            }            // Output the table rows            echo $tr;        } else {            echo "<h6>No Orders Available</h6>";        }    }}if($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action'])){    $controller = new orderController();    switch ($_POST['action']){        case 'createOrders':         $controller->takeOrders();         break;    }}